/*
活页本题目
1. 读取的数据是一个字符串数组
   '01-8' --- 01 表示第1本活页, 8 表示第1本活页的第8页
2. 对这个字符串数据进行一系列的操作
*/
const inputs = ["01-8", "02-20", "01-1", "01-3", "01-4", "01-5", "02-18", "01-9", "02-3", "02-4", "02-5", "02-10"]

const a = [] // a 数组 保存的是 页码
const b = [] // b 数组 保存的是第几本活页
const sum = inputs.length
// 第1个循环获取输入的页码和对应的活页号
for (let i = 0; i < sum; i++) {
    const input = inputs[i].split("-")
    a[i] = parseInt(input[1]) // 获取输入的活页本号
    b[i] = parseInt(input[0]) // 获取输入的页码
}

// console.log("获取输入的活页本号", a)
// console.log("获取输入的页码", b)
// 下标   1     2     3     4      5    6     7     8     9     10    11    12
// a = [  8,   20,    1,    3,    4,    5,    18,   9,    3,    4,    5,   10 ]
// b =  [ 1,    2,    1,    1,    1,    1,    2,    1,    2,    2,    2,    2 ]

// 第2个循环
for (let i = 0; i < sum - 1; i++) {
    let t = i // 保存 当前的下标
    for (let j = i + 1; j < sum; j++) {
        // 当前值 a[i] 与保存值比较, 如果比当前值小 则下标改为当前值,
        // 也就是说, 当前值是小的.
        if (b[t] > b[j] || b[t] === b[j] && a[t] > a[j]) {
            t = j
        }
    }
    
    const tmpA = a[i]
    a[i] = a[t]
    a[t] = tmpA

    const tmpB = b[i]
    b[i] = b[t]
    b[t] = tmpB
}

// console.log("获取输入的活页本号", a)
// console.log("获取输入的页码", b)

// a =  [ 1,  3,  4,  5,  8,  9,  3,  4,  5,  10,  18, 20 ]  页码
// b =  [ 1,  1,  1,  1,  1,  1,  2,  2,  2,  2,   2,  2 ] 活页

// 设置2个数组, c 保存连续页码的起始位置和结束位置
// d 保存第几本书
const c = [] 
const d = []
c[0] = a[0]
d[0] = b[0]

s = 0  // 活页数组的下标
t = a[0] // 页码数组的第1项, t 代表当前的起始页码
// a =  [ 1,  3,  4,  5,  8,  9,  3,  4,  5,  10,  18, 20 ]  页码
// b =  [ 1,  1,  1,  1,  1,  1,  2,  2,  2,  2,   2,  2 ] 活页
for (let i = 0; i < sum; i++){
    // b[i] === b[i-1] 表明是同一个活页, t + 1 === a[i] 表明是连续的页码
    if(b[i] === b[i-1] && t + 1 === a[i]){
        // 如果是同一个活页的连续页码, 则当前页码改为 第 i 项
        //! 3-1. t = a[2] = 4
        //! 4-1. t = a[3] = 5
        t = a[i]
    }else{
        // 直到下一个是不连续的情况时, c 保存连续页码的起始位置和结束位置
        //! 1-1. t = a[0] = 1, c[2*s]= c[0] = a[0]=1
        //! 2-1. t = a[0] = 1, s = 1, c[2*s]= c[2] = a[0] = 3
        //! 5-1. t = a[3] = 5, s = 2, c[2*s] = c[4] = a[4]
        c[2*s] = t 
        //! 1-2. s = 0 + 1 = 1
        //! 2-2. s = 1 + 1 = 2
        //! 5-2. s = 
        s = s + 1
        //! 1-3. c[2*s-1] = c[1] = b[0] = 1
        //! 2-3. c[2*s-1] = c[3] = b[2] = 3
        c[2*s -1] = b[i]
        //! 1-4. d[1] = b[0] = 1
        //! 2-4. d[2] = b[1] = 3
        d[s] = b[i]
        //! 1-5. t = a[0] = 1
        //! 2-5. t = a[1] = 3
        t = a[i]
    }
}
c[2*s] = t
console.log(`第1本活页: ${c[0]} - ${c[1]}`)
for (let i = 0; i < s; i++){
    if(d[i] !== d[i-1]){
        console.log(`第${d[i] }本活页: ${c[2*i-1]} - ${c[2*i]} `)
    }
}

export {}